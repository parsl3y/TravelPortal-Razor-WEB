@page "/edit-hotel"
@page "/edit-hotel/{id:int}"

@inject NavigationManager Navigation
@inject ICityService CityService
@inject IHotelService HotelService

@rendermode InteractiveAuto

@if (Id == null)
{
    <h3>Додати новий готель</h3>
}
else
{
    <h3>Редагувати @hotel.name</h3>
}

<EditForm Model="hotel" OnSubmit="HandleSubmit" FormName="hotelForm">
    <label>Назва</label>
    <InputText @bind-Value="hotel.name" class="form-control" required />

    <label>Рейтинг</label>
    <InputNumber @bind-Value="hotel.rating" class="form-control" min="0" max="5" step="0.1" required />

    <label>Фото</label>
    <InputFile OnChange="HandleFileSelected" class="form-control" />

    <label>Місто</label>
    <select @bind="hotel.CityId" class="form-control">
        @foreach (var city in cities)
        {
            <option value="@city.Id">@city.Name</option>
        }
    </select>

    <button type="submit" class="btn btn-primary">Відправити</button>
    @if (Id != null)
    {
        <button @onclick="DeleteHotel" type="button" class="btn btn-primary">Видалити</button>
    }
</EditForm>

@code {
    [Parameter]
    public Guid? Id { get; set; }

    Hotel hotel { get; set; } = new Hotel { name = string.Empty, rating = 0, Photo = null, CityId = Guid.Empty };
    private List<City> cities = new List<City>();

    protected override async Task OnInitializedAsync()
    {
        await LoadCities();
        if (Id != null)
        {
            hotel = await HotelService.GetByIdAsync((Guid)Id);
        }
    }

    private async Task LoadCities()
    {
        cities = await CityService.GetAllCity();
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await HotelService.CreateAsync(hotel);
            Navigation.NavigateTo("hotels");
        }
        else
        {
            await HotelService.UpdateAsync((Guid)Id, hotel);
            Navigation.NavigateTo("hotels");
        }
    }

    async Task DeleteHotel()
    {
        if (Id != null)
        {
            await HotelService.DeleteAsync((Guid)Id);
            Navigation.NavigateTo("hotels");
        }
    }

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            using var stream = file.OpenReadStream();
            using var ms = new MemoryStream();
            await stream.CopyToAsync(ms);
            hotel.Photo = ms.ToArray();
        }
    }
}
