@page "/edit-city"
@page "/edit-city/{id:guid}"

@inject NavigationManager Navigation
@inject ICityService CityService
@rendermode  InteractiveAuto

@if (Id == null)
{
    <h3>Add New City</h3>
}
else
{
    <h3>Edit @city.Name</h3>
}
<EditForm Model="city" OnSubmit="HandleSubmit">
    <label>Name</label>
    <InputText @bind-Value="city.Name" required />
    <button type="submit" class="btn btn-primary" >Submit</button>
    @if (Id != null)
    {
        <button @onclick="DeleteCity" type="button" class="btn btn-primary">Delete</button>
    }
</EditForm>

@code {
    [Parameter]
    public Guid? Id { get; set; }

    City city { get; set; } = new City { Name = string.Empty };

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            city = await CityService.GetCityById((Guid)Id);
        }
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await CityService.AddCity(city);
            Navigation.NavigateTo("cities");
        }
        else
        {
            await CityService.EditCity((Guid)Id, city);
            Navigation.NavigateTo("cities");
        }
    }

    async Task DeleteCity()
    {
        if (Id != null)
        {
            await CityService.DeleteCity((Guid)Id);
            Navigation.NavigateTo("cities");
        }
    }
}
